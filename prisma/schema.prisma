generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model HospitalWorker {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String   @db.String
  lastName      String   @db.String
  email         String   @db.String
  phone         String   @db.String
  password      String   @db.String
  hospitalId    String   @db.ObjectId
  accountStatus String   @default("Active") @db.String
  role          String   @default("Hospital Worker") @db.String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  hospital Hospital @relation(fields: [hospitalId], references: [id])
}

model Token {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  token          String   @db.String
  user           String   @db.ObjectId
  expirationDate DateTime
}

model HospitalAdmin {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String   @db.String
  lastName      String   @db.String
  email         String   @db.String
  phone         String   @db.String
  password      String   @db.String
  hospitalId    String?  @db.ObjectId
  accountStatus String   @default("Inactive") @db.String
  role          String   @default("Hospital Admin") @db.String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model BloodBankRecorder {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String   @db.String
  lastName      String   @db.String
  email         String   @db.String
  phone         String   @db.String
  password      String   @db.String
  bloodBankId   String   @db.ObjectId
  accountStatus String   @default("Active") @db.String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  hospitalId    String?  @db.ObjectId
  role          String   @default("Blood Bank Recorder") @db.String

  bloodBank BloodBank @relation(fields: [bloodBankId], references: [id])
}

model Hospital {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String   @db.String
  googleLocation String   @db.String
  province       String   @db.String
  town           String   @db.String
  specialization String   @db.String
  hospitalType   String   @db.String
  accessStatus   String   @default("Inactive") @db.String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  workers  HospitalWorker[]
  requests BloodRequest[]

  // Stock fields for tracking current blood and plasma inventory
  rhP_O       Int @default(0)
  rhP_A       Int @default(0)
  rhP_B       Int @default(0)
  rhP_AB      Int @default(0)
  rhN_O       Int @default(0)
  rhN_A       Int @default(0)
  rhN_B       Int @default(0)
  rhN_AB      Int @default(0)
  plasma_O_P  Int @default(0)
  plasma_O_N  Int @default(0)
  plasma_A_P  Int @default(0)
  plasma_A_N  Int @default(0)
  plasma_B_P  Int @default(0)
  plasma_B_N  Int @default(0)
  plasma_AB_P Int @default(0)
  plasma_AB_N Int @default(0)
}

model BloodBank {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String   @db.String
  googleLocation String   @db.String
  province       String   @db.String
  town           String   @db.String
  email          String   @db.String
  phone          String   @db.String
  POBox          String   @db.String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  bloodInTransactions  BloodInTransaction[]
  bloodOutTransactions BloodOutTransaction[]
  requests             BloodRequest[]

  // Stock fields for tracking current blood and plasma inventory
  rhP_O             Int                 @default(0)
  rhP_A             Int                 @default(0)
  rhP_B             Int                 @default(0)
  rhP_AB            Int                 @default(0)
  rhN_O             Int                 @default(0)
  rhN_A             Int                 @default(0)
  rhN_B             Int                 @default(0)
  rhN_AB            Int                 @default(0)
  plasma_O_P        Int                 @default(0)
  plasma_O_N        Int                 @default(0)
  plasma_A_P        Int                 @default(0)
  plasma_A_N        Int                 @default(0)
  plasma_B_P        Int                 @default(0)
  plasma_B_N        Int                 @default(0)
  plasma_AB_P       Int                 @default(0)
  plasma_AB_N       Int                 @default(0)
  BloodBankRecorder BloodBankRecorder[]
}

model BloodInTransaction {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  rhP_O       Int        @db.Int
  rhP_A       Int        @db.Int
  rhP_B       Int        @db.Int
  rhP_AB      Int        @db.Int
  rhN_O       Int        @db.Int
  rhN_A       Int        @db.Int
  rhN_B       Int        @db.Int
  rhN_AB      Int        @db.Int
  plasma_O_P  Int        @db.Int
  plasma_O_N  Int        @db.Int
  plasma_A_P  Int        @db.Int
  plasma_A_N  Int        @db.Int
  plasma_B_P  Int        @db.Int
  plasma_B_N  Int        @db.Int
  plasma_AB_P Int        @db.Int
  plasma_AB_N Int        @db.Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  BloodBank   BloodBank? @relation(fields: [bloodBankId], references: [id])
  bloodBankId String?    @db.ObjectId
}

model BloodOutTransaction {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  rhP_O       Int        @db.Int
  rhP_A       Int        @db.Int
  rhP_B       Int        @db.Int
  rhP_AB      Int        @db.Int
  rhN_O       Int        @db.Int
  rhN_A       Int        @db.Int
  rhN_B       Int        @db.Int
  rhN_AB      Int        @db.Int
  plasma_O_P  Int        @db.Int
  plasma_O_N  Int        @db.Int
  plasma_A_P  Int        @db.Int
  plasma_A_N  Int        @db.Int
  plasma_B_P  Int        @db.Int
  plasma_B_N  Int        @db.Int
  plasma_AB_P Int        @db.Int
  plasma_AB_N Int        @db.Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  BloodBank   BloodBank? @relation(fields: [bloodBankId], references: [id])
  bloodBankId String?    @db.ObjectId
}

model BloodRequest {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  hospitalId        String   @db.ObjectId
  idOfOtherHospital String   @db.ObjectId
  status            String   @db.String
  rhP_O             Int      @db.Int
  rhP_A             Int      @db.Int
  rhP_B             Int      @db.Int
  rhP_AB            Int      @db.Int
  rhN_O             Int      @db.Int
  rhN_A             Int      @db.Int
  rhN_B             Int      @db.Int
  rhN_AB            Int      @db.Int
  plasma_O_P        Int      @db.Int
  plasma_O_N        Int      @db.Int
  plasma_A_P        Int      @db.Int
  plasma_A_N        Int      @db.Int
  plasma_B_P        Int      @db.Int
  plasma_B_N        Int      @db.Int
  plasma_AB_P       Int      @db.Int
  plasma_AB_N       Int      @db.Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  hospital    Hospital   @relation(fields: [hospitalId], references: [id])
  BloodBank   BloodBank? @relation(fields: [bloodBankId], references: [id])
  bloodBankId String?    @db.ObjectId
}

model Admin {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String  @db.String
  lastName      String  @db.String
  email         String  @db.String
  phone         String  @db.String
  password      String  @db.String
  role          String  @default("Blood Bank Admin") @db.String
  hospitalId    String? @db.ObjectId
  accountStatus String  @default("Active") @db.String
}
